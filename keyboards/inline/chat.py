from aiogram import types
from aiogram.utils.callback_data import CallbackData
from keyboards.inline.admin import admin_call, give_sub
from datetime import datetime, timedelta

chat_set = CallbackData('chat_set', 'method')

methods__ = {
     1: 'üî¥–°—Ä–µ–¥.–ë–¢–ó', 2: 'üü†–ú–µ–¥.–ë–¢–ó',
     3: 'üü°–ú–∏–Ω.–ë–¢–ó',
     4: 'üü¢–°—Ä–µ–¥.–ë–ù–°', 5: 'üü£–ú–µ–¥.–ë–ù–°',
     6: 'üü§–ö—É—Ä—Å.–ë–ù–°',
     7: 'üîµ–°–≤–æ—ë –∑–Ω–∞—á–µ–Ω–∏–µ'
     }

methods_ = {
     1: 'üü°–ú–∏–Ω.–ë–¢–ó', 2: '‚ö™–ú–∏–Ω.–ë–ù–°',
     3: 'üî¥–°—Ä–µ–¥.–ë–¢–ó', 4: 'üü¢–°—Ä–µ–¥.–ë–ù–°',
     5: 'üü†–ú–µ–¥.–ë–¢–ó', 6: 'üü£–ú–µ–¥.–ë–ù–°',
     7: 'üîµ–°–≤–æ—ë –∑–Ω–∞—á–µ–Ω–∏–µ', 8: 'üü§–ö—É—Ä—Å.–ë–ù–°',
     }

def times():
    # –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–¥–ø–∏—Å–∫–∏?
    # –í—Å—ë –ø—Ä–æ—Å—Ç–æ! '15 –º–∏–Ω.' —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    # datetime.now() + timedelta(minutes=15, seconds=1)
    # –≠—Ç–æ –≤—Ä–µ–º—è –¥–æ –∫–∞–∫–æ–≥–æ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞
    # –ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è –º—ã –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º timedelta(...)
    # –≠—Ç–æ –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –∫–∞–∫ –±—ã –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ —Å–µ–π—á–∞—Å –≤—Ä–µ–º–µ–Ω–∏ –µ—â—ë
    # –ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å + timedelta(minutes=60) –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏
    # –¢–æ –ø–æ–ª—É—á–∞–µ–º –±—É–¥—É—â–µ–µ –≤—Ä–µ–º—è —Ç.–µ. –∫ –ø—Ä–∏–º–µ—Ä—É –±—ã–ª–æ 16:50
    # –ú—ã –¥–æ–±–∞–≤–ª—è–µ–º timedelta(minutes=60) 60 –º–∏–Ω—É—Ç
    # –ü–æ–ª—É—á–∞–µ–º 17:50, —ç—Ç–æ—Ç –º–∏–Ω–∏ –≥–∞–π–¥ –Ω–µ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞
    # https://pythonworld.ru/moduli/modul-datetime.html –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç
    return {
        '15 –º–∏–Ω.': datetime.now() + timedelta(minutes=15, seconds=1),
        '30 –º–∏–Ω.': datetime.now() + timedelta(minutes=30, seconds=1),
        '1 —á–∞—Å': datetime.now() + timedelta(hours=1, seconds=1),
        '3 —á–∞—Å–∞': datetime.now() + timedelta(hours=3, seconds=1),
        '6 —á–∞—Å–æ–≤': datetime.now() + timedelta(hours=6, seconds=1),
        '12 —á–∞—Å–æ–≤': datetime.now() + timedelta(hours=12, seconds=1),
        '1 –¥–µ–Ω—å': datetime.now() + timedelta(days=1, seconds=1),
        '3 –¥–Ω—è': datetime.now() + timedelta(days=3, seconds=1),
        '6 –¥–Ω–µ–π': datetime.now() + timedelta(days=6, seconds=1),
        '15 –¥–Ω–µ–π': datetime.now() + timedelta(days=15, seconds=1),
        '30 –¥–Ω–µ–π': datetime.now() + timedelta(days=30, seconds=1),
        '60 –¥–Ω–µ–π': datetime.now() + timedelta(days=60, seconds=1),
        '90 –¥–Ω–µ–π': datetime.now() + timedelta(days=90, seconds=1),
        '180 –¥–Ω–µ–π': datetime.now() + timedelta(days=180, seconds=1),
        '365 –¥–Ω–µ–π': datetime.now() + timedelta(days=365, seconds=1),
    }


def chat_set_method1():
    keyboard = types.InlineKeyboardMarkup(row_width=2)

    for i in methods_:
        keyboard.insert(
            types.InlineKeyboardButton(
                text=methods_[i],
                callback_data=chat_set.new(method=i)
            )
        )
    return keyboard

def chat_set_method():
    keyboard = types.InlineKeyboardMarkup(row_width=2)

    for i in range(1, 3):
        keyboard.insert(
            types.InlineKeyboardButton(
                text=methods_[i],
                callback_data=chat_set.new(method=i)
            )
        )
    keyboard.row(types.InlineKeyboardButton(text='‚¨á–î—Ä—É–≥–æ–µ', callback_data=chat_set.new(method='show_all')))
    return keyboard

def chat_set_method_all():
    keyboard = types.InlineKeyboardMarkup(row_width=2)

    for i in methods_:
        keyboard.insert(
            types.InlineKeyboardButton(
                text=methods_[i],
                callback_data=chat_set.new(method=i)
            )
        )
    return keyboard



confirmation_keyboard = types.InlineKeyboardMarkup(
    inline_keyboard=[
        [
            types.InlineKeyboardButton(
                text='–ü—Ä–∏–º–µ–Ω–∏—Ç—å',
                callback_data='confirm_set'
            ),
            types.InlineKeyboardButton(
                text='–û—Ç–º–µ–Ω–∞',
                callback_data='cancel'
            )
        ]
    ]
)

cancel_keyboard = types.InlineKeyboardMarkup(
    inline_keyboard=[
        [
            types.InlineKeyboardButton(
                text='–û—Ç–º–µ–Ω–∏—Ç—å',
                callback_data='cancel'
            )
        ]
    ]
)

def request_sub(id_: int):
    return types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    types.InlineKeyboardButton(
                        text='‚ô¶–í—ã–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É',
                        callback_data=admin_call.new(action='give_sub', arg=id_)
                    ),
                    types.InlineKeyboardButton(
                        text='ü§ê–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å',
                        callback_data=admin_call.new(action='ignore_user', arg=str(id_) + '-')
                    )
                ]
            ]
    )


def get_time(id_: int):
    keyboard = types.InlineKeyboardMarkup(row_width=5)
    times_ = times()
    for time in times_:
        keyboard.insert(types.InlineKeyboardButton(
                    text=time,
                    callback_data=give_sub.new(id_=id_, time_index=list(times_.keys()).index(time))
        ))
    return keyboard


